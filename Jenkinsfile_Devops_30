pipeline {
          agent {         
             label 'master'
          }
          tools {
              maven 'maven3'
              jdk 'java1.8'

          }
          
          stages {
            stage ('Parallel'){
             parallel {
                    stage('Validate the code') {
                        steps {
                            script {
                                sh """
                                mvn validate
                                """       
                                }
                        }

        }
                    stage('Code Compile') {
                        steps {
                            script {
                                sh """
                                mvn compile
                                """       
                                }
                        }
                        
        }
            }
            }
            stage('Code Test') {
                steps {
                    catchError (buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                    script {
                        sh """
                        mvn test
                        """       
                         }
                    }
                   
                  
                }
                
}
            stage('Package') {
                steps {
                    script {
                        sh """
                        mvn package
                        """       
                         }
                }
                
}

            stage('Git Version'){
            steps{
                script{
                    git_version = sh (returnStdout: true, script: '''
                        git rev-parse --short HEAD
                    ''')

                    branch_name = "master"
                    final_version = "${env.BUILD_NUMBER}.$git_version"
                    echo "git version is $git_version"
                    echo "branch_name is $branch_name"
                    echo  "final_version is $final_version"

                }

            }

            }
            stage('zip package'){
                steps{
                    script {
                        sh """
                        zip target/addressbook.zip target/addressbook-2.0.war
                        """

                    }

                }

            }

            stage('Nexus Upload'){
                steps{
                    script {
                        nexusArtifactUploader (
                            credentialsId: "nexus_cred", 
                            groupId: "${branch_name}", 
                            nexusUrl: "localhost:8081", 
                            nexusVersion: "nexus3", 
                            protocol: "http", 
                            repository: "devops30",
                            version: "${final_version}",
                            artifacts: 
                            [[artifactId: 'Web', classifier: '', file: 'target\\addressbook.zip', type: 'zip']]
                        );                     }
                }
            }
}
}
