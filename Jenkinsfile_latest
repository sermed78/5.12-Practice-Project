#!groovy
/*
=======================================
Author: DevOps
Date: 05/12/2020
Purpose: To build frontend java project
=======================================
*/

pipeline {
 
 agent {

     label 'master'
 }
 
 tools {

     maven 'mymaven'
     jdk 'java11'
 }

 stages {
 
	stage ('Code Checkout'){
	steps {
	git credentialsId: 'devops_git', url: 'https://github.com/devopstrainers1/addressbook.git'
	}
	}

     stage('Validate Project') {
     steps {

         script{
			
			sh """
             mvn validate
			 
			 """
         }
     }
     }

     stage('Code Compile') {
     steps {

         script{
			
			sh """
             mvn compile
			 """
         }
     }
     }

    stage('Code Test') {
    steps {
        script{
			
			sh """
             mvn test
			 """
         }

    }
}

stage('Package') {
    steps {
        script{
			
			sh """
             mvn package
			 """
         }

    }
}

stage('Create Zip') {
    steps {
        script{
			
			sh """
             cd "${env.WORKSPACE}/target/"
             zip FrontEnd.zip addressbook-2.0.war
			 """
         }

    }
}

stage ('Publish to Nexus'){

    steps{

        script {
            artifactId = "development"
            artifactdir = "${env.WORKSPACE}/target/"
            artifactfile = "FrontEnd"
            groupid = "${env.BRANCH_NAME}"
            sh """
            git_version=`git rev-parse --short HEAD`
            """
        nexusArtifactUploader(
                nexusVersion: 'nexus3',
                protocol: 'http',
                version: "${git_version}",
                groupId: "${groupid}",
                credentialsId: 'nexus_ID',
                repository: 'Devops_Repo',
                nexusUrl: '34.67.47.43:8081',
                artifacts: 
                [
                    [artifactId: artifactId, file: artifactdir + artifactfile + '.zip', type: 'zip']
                    
                    ]

        ); 
    }
}
}
 }

 
post{
    
    always{

    dir("${env.WORKSPACE}@tmp"){
        deleteDir()
    }
    
}
}
	 
}

 